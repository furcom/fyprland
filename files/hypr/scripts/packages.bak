#!/bin/bash
# ██████╗  █████╗  ██████╗██╗  ██╗ █████╗  ██████╗ ███████╗███████╗
# ██╔══██╗██╔══██╗██╔════╝██║ ██╔╝██╔══██╗██╔════╝ ██╔════╝██╔════╝
# ██████╔╝███████║██║     █████╔╝ ███████║██║  ███╗█████╗  ███████╗
# ██╔═══╝ ██╔══██║██║     ██╔═██╗ ██╔══██║██║   ██║██╔══╝  ╚════██║
# ██║     ██║  ██║╚██████╗██║  ██╗██║  ██║╚██████╔╝███████╗███████║
# ╚═╝     ╚═╝  ╚═╝ ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝ ╚══════╝╚══════╝
# script by furcom (https://github.com/furcom)

AUR_HELPER="yay"

format() {
    if [ "$1" -eq 0 ]; then
        echo ''
    else
        echo "$1"
    fi
}

check_updates() {
    if ! updates_arch="$(checkupdates | wc -l)"; then
        updates_arch=0
    fi

    if ! updates_aur="$($AUR_HELPER -Qum 2>/dev/null | wc -l)"; then
        updates_aur=0
    fi

    output=""

    # Only show Arch updates if there are any
    if [ "$updates_arch" -gt 0 ]; then
        output="󰮯 $(format $updates_arch)"
    fi

    # Only show AUR updates if there are any
    if [ "$updates_aur" -gt 0 ]; then
        if [ -n "$output" ]; then
            output="$output  $(format $updates_aur)"
        else
            output=" $(format $updates_aur)"
        fi
    fi

    # Print output only if there's something to show
    if [ -n "$output" ]; then
        echo "$output"
    else
        echo
    fi
}

clean_pkg_cache() {
    echo -e "\nWould you like to clean the pkg cache?"
    read -p "Enter your choice? [Y/n]: " answer
    case $answer in
        [Yy]|"" )
            if [ -z "$(ls /var/cache/pacman/pkg/ 2>/dev/null)" ]; then
                echo "No cache to clear."
            else
                sudo pacman -Sc
            fi
            ;;
        [Nn] )
            echo "Skipping cleaning of pkg cache."
            ;;
        * )
            clear
            echo "Invalid input. Please enter 'y' or 'n'."
            clean_pkg_cache
            ;;
    esac
}

remove_unused_packages() {
    echo -e "\nWould you like to remove unused packages?"
    read -p "Enter your choice? [Y/n]: " answer
    case $answer in
        [Yy]|"" )
            unused_packages=$(pacman -Qtdq)
            if [ -z "$unused_packages" ]; then
                echo "No unused packages to remove."
            else
                sudo pacman -R $unused_packages
            fi
            ;;
        [Nn] )
            echo "Skipping removal of unused packages."
            ;;
        * )
            clear
            echo "Invalid input. Please enter 'y' or 'n'."
            remove_unused_packages
            ;;
    esac
}

hypr_plugin_updates() {
    echo -e "\nWould you like to update the Hyprland plugins?"
    read -p "Enter your choice? [Y/n]: " answer
    case $answer in
        [Yy]|"" )
            hyprpm update
            ;;
        [Nn] )
            echo "Skipping updating Hyprland plugins."
            ;;
        * )
            clear
            echo "Invalid input. Please enter 'y' or 'n'."
            hypr_plugin_updates
            ;;
    esac
}

pacman_updates() {
    echo -e "\nWould you like to update your Arch packages?"
    read -p "Enter your choice? [Y/n]: " answer
    case $answer in
        [Yy]|"")
            sudo pacman -Syu
	    killall -SIGUSR2 waybar
            ;;
        [Nn] )
            echo "Skipping updating Arch packages."
            ;;
        * )
            clear
	    echo "Invalid input. Please enter 'y' or 'n'."
            pacman_updates
            ;;
    esac
}

aur_updates() {
    echo -e "\nWould you like to update your AUR packages?"
    read -p "Enter your choice? [Y/n]: " answer
    case $answer in
        [Yy]|"" )
            $AUR_HELPER -Syu
	    killall -SIGUSR2 waybar
            ;;
        [Nn] )
            echo "Skipping updating AUR packages."
            ;;
        * )
	    clear
            echo "Invalid input. Please enter 'y' or 'n'."
            aur_updates
            ;;
    esac
}

# Process script arguments
case "$1" in
    --check)
        check_updates
        ;;
    --clean)
        clean_pkg_cache
	remove_unused_packages
        ;;
    --aur)
        aur_updates
        ;;
    --hypr)
        hypr_plugin_updates
        ;;
    --pacman)
        pacman_updates
        ;;
    *)
        echo "Usage: $0 {--check|--aur|--pacman}"
        exit 1
        ;;
esac

